---
title: "Sandbox"
format: html
---

```{r}
library(targets)
library(tidyverse)
library(patchwork)
library(tidymodels)
library(ggdist)
library(gt)
library(gtsummary)
library(parameters)
library(skimr)

set.seed(1989)
```
# Tabulating Unadjusted Outcomes

```{r}
source("R/tabulate_unadjusted_outcomes.R")

tabulate_unadjusted_outcomes(tar_read(asthmaster_modified))
```


# Plotting Yearly Percentages

```{r}
# tar_read(plotted_yearly_percentages)

source("R/plot_yearly_percentages.R")

plot_yearly_percentages(asthmaster_modified)
```


# Tabulating Model Coefficients

```{r}

```


# Discretizing variables

```{r}
tar_load(asthmaster_ipw)

asthmaster_ipw |> 
    select(
        Albuterol_Cont_Dose_Factor,
        PASSchange0_24_percent,
        Albuterol_Cont_hrs_duration,
        Albuterol_Cont_discrete_hrs,
        PICU.LOS.VPS,
        PICU.LOS.VPS_discrete_hrs,
        Hospital_LOS,
        Hospital_LOS_discrete_hrs
    ) |> 
    view()
```


# Plotting Outcomes by Treatment Dose

```{r}
# tar_load(plotted_outcomes_together)
# 
# plotted_outcomes_together

source("R/plot_outcomes_together.R")
source("R/plot_outcome_box.R")

plot_outcomes_together(asthmaster_modified)
```

# Comparing IPW distributions

```{r}
tar_load(asthmaster_ipw)
```


# Adding stabilized ipw

```{r}
tar_make()
tar_load(asthmaster_modified)
tar_load(asthmaster_compact)
tar_load(final_model_ipw)
```

```{r}
source("R/add_ipw.R")

ipw_test <-
    final_model_ipw |>
    add_ipw(asthmaster_compact, asthmaster_modified) |> 
    arrange(desc(ipw_stabilized))

ipw_test |> 
    ggplot(aes(ipw_ate, ipw_stabilized)) +
    geom_point()

sum(ipw_test$ipw_stabilized)

filter(ipw_test, Albuterol_Cont_Dose_Logit == 1)
```


# Summary Table

```{r}
tar_make()
tar_load(asthmaster_modified)
```

```{r}
asthmaster_modified |> 
    select(starts_with("Albuterol_Cont"))
```


```{r}

theme_gtsummary_journal("jama")

gt_summary_labels <- list(
    Year = "Year of Admission",
    AgeAtEncounter = "Age (yrs)",
    Weight.VPS = "Weight (kg)",
    ChronicLungdzDx = "Chronic Lung Disease",
    BPD = "Bronchopulmonary Dysplasia",
    CCC = "Number of Complex Chronic Conditions",
    PneumoniaDx = "Comorbid Pneumonia",
    Temp_Initial = "Temperature",
    HR_Initial = "Heart Rate",
    RR_Initial = "Respiratory Rate",
    O2_Initial = "Oxygen Saturation",
    PASS_Initial = "Pediatric Asthma Severity Score",
    SBP_Initial = "Systolic Blood Pressure",
    DBP_Initial = "Diastolic Blood Pressure",
    # Treatments
    Resp_Initial = "Initial Oxygen Support",
    FiO2_Initial = "Initial Fraction of Inspired Oxygen",
    Ipratropium_admin = "Ipratropium Ever Given",
    Magnesium_admin = "Magnesium Ever Given",
    Epinephrine_admin = "Epinephrine Ever Given",
    # Independent Variable
    ## Albuterol_Cont_Dose_Factor,
    # Outcomes
    PASSchange0_24_percent = "PASS (% Change at 24 hrs)",
    Albuterol_Cont_hrs = "Length of Continuous Albuterol Therapy (hrs)",
    PICU.LOS.VPS_discrete = "Length of PICU Stay (hrs)",
    Hospital_LOS_discrete = "Length of Hospital Admission (hrs)"
    ## DischargeDisposition
)


gt_demographics <-
    asthmaster_modified |> 
    select(
        Albuterol_Cont_Dose_Factor,
        # Demographics
        Year,
        AgeAtEncounter,
        ## Weight,
        Weight.VPS,
        Sex,
        Race,
        Ethnicity
    ) |> 
    # mutate(
    #     
    # ) |> 
    tbl_summary(
        by = "Albuterol_Cont_Dose_Factor",
        label = gt_summary_labels,
        missing_text = "Missing"
    ) |> 
    add_overall() |> 
    add_p()
    
    
gt_clinicals <-
    asthmaster_modified |> 
    select(
        Albuterol_Cont_Dose_Factor,
        ChronicLungdzDx,
        BPD,
        # CCC,
        PneumoniaDx
    ) |> 
    tbl_summary(
        by = "Albuterol_Cont_Dose_Factor",
        label = gt_summary_labels,
        missing_text = "Missing"
    ) |> 
    add_overall() |> 
    add_p() 

gt_vitals <-
    asthmaster_modified |> 
    select(
        Albuterol_Cont_Dose_Factor,
        Temp_Initial,
        HR_Initial,
        RR_Initial,
        O2_Initial,
        PASS_Initial,
        SBP_Initial,
        DBP_Initial
    ) |> 
    tbl_summary(
        by = "Albuterol_Cont_Dose_Factor",
        label = gt_summary_labels,
        missing_text = "Missing",
        digits = list(
            Temp_Initial ~ 1
        )
    ) |> 
    add_overall() |> 
    add_p() 

gt_treatments <-
    asthmaster_modified |> 
    select(
        Albuterol_Cont_Dose_Factor,
        Resp_Initial,
        FiO2_Initial,
        Ipratropium_admin,
        Magnesium_admin,
        Epinephrine_admin
    ) |> 
    # mutate(
    #     
    # ) |> 
    tbl_summary(
        by = "Albuterol_Cont_Dose_Factor",
        label = gt_summary_labels,
        missing_text = "Missing"
    ) |> 
    add_overall() |> 
    add_p()

gt_outcomes <-
    asthmaster_modified |> 
    select(
        Albuterol_Cont_Dose_Factor,
        PASSchange0_24_percent,
        Albuterol_Cont_hrs,
        PICU.LOS.VPS_discrete,
        Hospital_LOS_discrete
    ) |> 
    # mutate(
    #     
    # ) |> 
    tbl_summary(
        by = "Albuterol_Cont_Dose_Factor",
        label = gt_summary_labels,
        missing_text = "Missing"
    ) |> 
    add_overall() |> 
    add_p()

gt_all <-
    tbl_stack(
        list(gt_demographics, gt_clinicals, gt_vitals, gt_treatments, gt_outcomes),
        c("Demographics", "Clinical Factors", "Initial Vital Signs", "Treatments", "Outcomes")
    ) |> 
    modify_spanning_header(
        update = c(stat_1, stat_2) ~ "**Initial Continuous Albuterol Dose**",
    ) |> 
    as_gt()


gtsave(gt_all, "media/summary_table.html")

gt_outcomes
```


# Add Percent Change in PASS

# Dupes?

```{r}
source_med_admin_raw |> 
        filter(catalogcvdsc == "albuterol") |> 
        filter(StrengthDoseUnit == "mg/hr") |> 
        group_by(FIN) |> 
        slice_min(DT) |> view()
    # group_by(FIN) |>
    # summarize(n = n()) |>
    # filter(n > 1)
```


```{r}
tar_load(asthmaster_compact)

asthmaster_compact |> 
    group_by(FIN) |> 
    summarize(n = n()) |> 
    filter(n > 1)
```


```{r}
asthmaster_raw |> 
    group_by(FIN) |> 
    summarize(n = n()) |> 
    filter(n > 1)
```


# Add First Albuterol

```{r}
tar_load(source_med_admin_raw)
tar_load(asthmaster_raw)
source("R/add_first_albuterol.R")



count(df1, Albuterol_Cont_Dose_Max)
```
```{r}
count(df1, Albuterol_Cont_Dose_First)
```
```{r}
asthmaster_raw |> 
    add_first_albuterol(source_med_admin_raw) |> 
    count(Albuterol_Cont_Dose_First, Albuterol_Cont_Dose_Max) |> 
    arrange(Albuterol_Cont_Dose_First) |> 
    view()
```


# Cohort

```{r}
tar_load(asthmaster_modified)

asthmaster_modified |> 
    group_by(MRN) |> 
    summarise(n = n()) |> 
    arrange(desc(n))
```


# Archive

```{r}
library(plotly)
    
ggplotly(
    asthmaster_effects |> 
    filter(!is.na(PASS_Initial)) |> 
    select(starts_with("PASSchange0_")) |> 
    pivot_longer(
        cols = everything(),
        names_to = "interval_hr",
        values_to = "pass_change"
    ) |>
    mutate(
        interval_hr = factor(
            interval_hr,
            levels = c("PASSchange0_4", "PASSchange0_8", "PASSchange0_12", "PASSchange0_24", "PASSchange0_48"),
            ordered = TRUE
        )
    ) |> 
    ggplot(aes(x = pass_change, color = interval_hr, fill = interval_hr)) +
    geom_density(alpha = 0.2)
)
    

```


```{r}
summary(asthmaster_ipw$Albuterol_Cont_avg_duration)
```


```{r}
library(quantreg)

tar_load(asthmaster_ipw)

asthmaster_ipw$PASSchange0_24_percent <- asthmaster_ipw$PASSchange0_24 / asthmaster_ipw$PASS_Initial * 100

asthmaster_ipw$PASSchange0_24_norm <- sqrt_x(asthmaster_ipw$PASSchange0_24 / asthmaster_ipw$PASS_Initial)$x.t

asthmaster_ipw |> 
    ggplot(aes(PASSchange0_24_norm)) +
    geom_dotsinterval()


rq_model_unweighted <-
    rq(
        PASSchange0_24_percent ~ Cont_Albuterol_Dose,
        tau = 0.5,
        data = asthmaster_ipw
    )

rq_model_weighted <-
    rq(
        percentPASSchange0_24 ~ Cont_Albuterol_Dose,
        tau = 0.5,
        data = asthmaster_pass,
        weights = ipw
    ) |> 
        tidy(se = "boot") |> 
        select(tau, estimate, std.error) |> 
        mutate(
            lower = estimate - (1.96 * std.error),
            upper = estimate + (1.96 * std.error)
        )

check_model(rq_model_weighted)
```


```{r}
summary(rq_model_unweighted)
```
```{r}
summary(rq_model_weighted)

asthmaster_ipw |> 
    filter(Cont_Albuterol_Dose == 10) |> 
    pull(PASSchange0_24_percent) |> 
    summary()
```


```{r}
asthmaster_ipw |> 
    filter(Cont_Albuterol_Dose == 15) |> 
    pull(PASSchange0_24_percent) |> 
    summary()
```





```{r}
quantreg_estimates |> 
    summarise(
        avg_estimate = mean(estimate),
        median_estimate = median(estimate),
        avg_std_error = mean(std.error)
        
    ) |> 
    mutate(
        lower = avg_estimate - (1.96 * avg_std_error),
        upper = avg_estimate + (1.96 * avg_std_error)
    )
```


```{r}
coef_matrix <- sapply(quantiles, function(tau) {
  coef(rq(PASSchange0_24_percent ~ Cont_Albuterol_Dose, data = asthmaster_ipw, tau = tau, weights = ipw))
})

plot(quantiles, coef_matrix[2, ], type = "l",
     xlab = "Quantiles", ylab = "Effect of Dose",
     main = "Effect of Dose Across Different Quantiles of Outcome") +
    scale_y_sqrt()
```


```{r}
pass_model_weighted <-
    lm(
        PASSchange0_24_percent ~ Cont_Albuterol_Dose,
        data = asthmaster_ipw,
        weights = ipw
    )

pass_model_unweighted <-
    lm(
        PASSchange0_24_norm ~ Cont_Albuterol_Dose,
        data = asthmaster_ipw
    )

check_distribution(pass_model_weighted)
```


```{r}
parameters(pass_model_weighted)
```
```{r}
parameters(pass_model_unweighted)
```


```{r}
check_model(pass_model_weighted)

```
```{r}
check_homogeneity(pass_model_weighted)
```
```{r}
check_normality(pass_model_weighted)
```



# Year 

```{r}
asthmaster_modified |> 
    ggplot(aes(y = Year, x = Albuterol_Cont_Dose_Logit)) +
    geom_dotsinterval()

glm(
    Albuterol_Cont_Dose_Logit ~ Year,
    data = asthmaster_modified,
    family = binomial()
) |> 
    parameters(exponentiate = TRUE)
```


# Varible Exploration

```{r}
table(asthmaster_modified$Albuterol_Cont_Dose_Factor, useNA = "ifany")
```
```{r}
table(asthmaster_modified$Albuterol_Cont_Dose_Logit, useNA = "ifany")
```


```{r}
asthmaster_modified |> 
    select(Albuterol_Cont_Dose_Logit, Weight, Weight.VPS, AgeAtEncounter, HR_Initial, Race_Black, RR_Initial) |> 
    summary()
    filter(!is.na(Albuterol_Cont_Dose_Logit)) |> 
    tabyl(Albuterol_Cont_Dose_Logit, HR_Initial)
```


```{r}
broom::augment(Year_Weight_Age_HR_Black_RR)

wrangle_model_roc <- function(logistic_model_obj) {
    
    augmented_model_frame <- broom::augment(logistic_model_obj)
    
    total <- nrow(augmented_model_frame)
    observed_present <- sum(augmented_model_frame$Albuterol_Cont_Dose_Logit)
    observed_absent <- total - observed_present
    
    df1 <-
        augmented_model_frame |>
        # as_tibble() |>
        mutate(
            higher_dose =
                factor(
                    if_else(
                        Albuterol_Cont_Dose_Logit,
                        "Observed", "Not Observed"
                    ),
                    levels = c("Observed", "Not Observed"),
                    ordered = TRUE
                )
        )
    
    df2 <- tibble(threshold = seq(from = 0, to = 1, by = 0.01)) 
    
    tabylate_from_threshold <- function(observed_prediction_df, threshold) {
        
        observed_prediction_df |> 
            mutate(
                .predicted_present = 
                    factor(
                        if_else(
                            .fitted > threshold,
                            "Predicted", "Not Predicted"
                        ),
                        levels = c("Predicted", "Not Predicted"),
                        ordered = TRUE
                    )
            ) |> 
            tabyl(.predicted_present, higher_dose)
    }
    
    
    df3 <-
        df2 |> 
        mutate(
            tabyl = 
                map(
                    .x = threshold,
                    .f = ~tabylate_from_threshold(df1, .x)
                ),
            sensitivity = 
                map_dbl(
                    .x = tabyl,
                    .f = ~ (.x[1,2] / observed_present)
                ),
            specificity = 
                map_dbl(
                    .x = tabyl,
                    .f = ~ .x[2,3] / observed_absent
                ),
            accuracy = 
                map_dbl(
                    .x = tabyl,
                    .f = ~ (.x[1,2] + .x[2,3]) / total
                ),
            balance = (sensitivity + specificity)/2
        )
    
    
    return(df3)
    
}


test <- wrangle_model_roc(Year_Weight_Age_HR_Black_RR)
```




# Exploring Primary Relationship

```{r}
tar_load(asthmaster_modified)
```

```{r}
asthmaster_modified |> 
    ggplot(aes(x = PASSchange0_24, y = Albuterol_Cont_Dose_Factor)) +
    stat_dotsinterval()
```


# Exploring Med Admin Duration

```{r}
tar_load(asthmaster_modified)
# tar_load(source_med_admin_raw)
```

```{r}
asthmaster_modified |> 
    select(starts_with("Albuterol_Cont")) |> 
    view()
```


```{r}
asthmaster_modified |>
    filter(
        Albuterol_Cont_hours_first_to_last == 0
    ) |>
    select(FIN, starts_with("Albuterol_Cont")) |> 
    view()
```


```{r}
# source("R/add_albuterol_duration.R")
# source("R/add_first_albuterol.R")
# source("R/add_albuterol_dose_factor.R")


asthmaster_modified |>
    # add_albuterol_duration(source_med_admin_raw) |> 
    # add_first_albuterol(source_med_admin_raw) |> 
    filter(
        # !is.na(Albuterol_Cont_Dose) &
        !is.na(Albuterol_Cont_days_from_first_to_last) &
            is.na(Albuterol_Cont_days_from_first_to_first_non)
    ) |>
    select(FIN, starts_with("Albuterol")) |> 
    view()
    
```

```{r}
asthmaster_modified$Albuterol_Cont_days_from_first_to_last |> summary()
```

```{r}
asthmaster_modified |> 
    filter(Albuterol_Cont_days_from_first_to_last == 0) |> 
    count()
```


```{r}
asthmaster_modified$Albuterol_Cont_days_from_first_to_first_non |> summary()
```


```{r}
asthmaster_modified$Albuterol_Cont_duration_diff |> summary()
```

```{r}

```


```{r}
asthmaster_modified |> 
    filter(
        # !is.na(Albuterol_Cont_Dose) &
        is.na(Albuterol_Cont_days_from_first_to_last) &
            is.na(Albuterol_Cont_days_from_first_to_first_non)
    ) |> 
    select(FIN, starts_with("Albuterol")) |> 
    view()
```

```{r}
asthmaster_modified |> 
    filter(
        # !is.na(Albuterol_Cont_Dose) &
        is.na(Albuterol_Cont_avg_duration) 
    ) |> 
    select(FIN, starts_with("Albuterol")) |> 
    view()
```


```{r}
df |> filter(!is.na(days_from_first_to_last_continuous) & Albuterol_Cont_admin == FALSE)
```

```{r}
df |> 
    select(FIN, days_from_first_to_last_continuous, days_from_first_continuous_to_first_after)
```
```{r}
df |> 
    ggplot(aes(x = days_from_first_to_last_continuous)) +
    geom_histogram()
```

```{r}
df |> 
    ggplot(aes(x = days_from_first_continuous_to_first_after)) +
    geom_histogram()
```

```{r}
df |> 
    ggplot(aes(x = duration_diff)) +
    geom_histogram()
```


```{r}
asc <-
    df |>
    ungroup() |> 
    arrange(desc(is_continuous)) |> 
    group_by(FIN) |> 
    summarise(first(start_time) - last(start_time)) |> 

desc <-
    df |>
    ungroup() |> 
    arrange(is_continuous) |> 
    group_by(FIN) |> 
    summarise(first(start_time) - last(start_time))

class(df$duration)

origin_med_admin |> 
    filter(StrengthDoseUnit == "NULL")
```

